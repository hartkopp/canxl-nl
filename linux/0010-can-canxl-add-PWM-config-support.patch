From 2b9942a38073aa7c364d43193ca25831d9f962da Mon Sep 17 00:00:00 2001
From: Oliver Hartkopp <socketcan@hartkopp.net>
Date: Tue, 20 May 2025 17:50:57 +0200
Subject: [PATCH 10/11] can: canxl: add PWM config support

Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
---
 drivers/net/can/dev/netlink.c    | 31 ++++++++++++++++++++++++++++++-
 include/linux/can/bittiming.h    | 25 +++++++++++++++++++++++++
 include/linux/can/dev.h          |  1 +
 include/uapi/linux/can/netlink.h | 15 +++++++++++++++
 4 files changed, 71 insertions(+), 1 deletion(-)

diff --git a/drivers/net/can/dev/netlink.c b/drivers/net/can/dev/netlink.c
index 1b798a7dcd64..685cceb74048 100644
--- a/drivers/net/can/dev/netlink.c
+++ b/drivers/net/can/dev/netlink.c
@@ -23,10 +23,11 @@ static const struct nla_policy can_policy[IFLA_CAN_MAX + 1] = {
 	[IFLA_CAN_TDC] = { .type = NLA_NESTED },
 	[IFLA_CAN_CTRLMODE_EXT] = { .type = NLA_NESTED },
 	[IFLA_CAN_XL_DATA_BITTIMING] = { .len = sizeof(struct can_bittiming) },
 	[IFLA_CAN_XL_DATA_BITTIMING_CONST] = { .len = sizeof(struct can_bittiming_const) },
 	[IFLA_CAN_XL_TDC] = { .type = NLA_NESTED },
+	[IFLA_CAN_XL_PWM] = { .type = NLA_NESTED },
 };
 
 static const struct nla_policy can_tdc_policy[IFLA_CAN_TDC_MAX + 1] = {
 	[IFLA_CAN_TDC_TDCV_MIN] = { .type = NLA_U32 },
 	[IFLA_CAN_TDC_TDCV_MAX] = { .type = NLA_U32 },
@@ -37,10 +38,16 @@ static const struct nla_policy can_tdc_policy[IFLA_CAN_TDC_MAX + 1] = {
 	[IFLA_CAN_TDC_TDCV] = { .type = NLA_U32 },
 	[IFLA_CAN_TDC_TDCO] = { .type = NLA_U32 },
 	[IFLA_CAN_TDC_TDCF] = { .type = NLA_U32 },
 };
 
+static const struct nla_policy can_pwm_policy[IFLA_CAN_PWM_MAX + 1] = {
+	[IFLA_CAN_PWM_OFFSET] = { .type = NLA_U8 },
+	[IFLA_CAN_PWM_LONG] = { .type = NLA_U8 },
+	[IFLA_CAN_PWM_SHORT] = { .type = NLA_U8 },
+};
+
 static int can_validate_bittiming(const struct can_bittiming *bt,
 				  struct netlink_ext_ack *extack)
 {
 	/* sample point is in one-tenth of a percent */
 	if (bt->sample_point >= 1000) {
@@ -464,10 +471,29 @@ static int can_changelink(struct net_device *dev, struct nlattr *tb[],
 				 can_xl_tdc_is_enabled(priv),
 				 CAN_CTRLMODE_XL_TDC_MASK, extack);
 	if (err)
 		return err;
 
+	/* CAN XL transceiver PWM configuration */
+	if (data[IFLA_CAN_XL_PWM]) {
+		struct nlattr *tb_pwm[IFLA_CAN_PWM_MAX + 1];
+
+		err = nla_parse_nested(tb_pwm, IFLA_CAN_PWM_MAX, data[IFLA_CAN_XL_PWM],
+				       can_pwm_policy, extack);
+		if (err)
+			return err;
+
+		if (tb_pwm[IFLA_CAN_PWM_OFFSET])
+			priv->pwm.pwm_offset = nla_get_u8(tb_pwm[IFLA_CAN_PWM_OFFSET]) & 0x3F;
+
+		if (tb_pwm[IFLA_CAN_PWM_LONG])
+			priv->pwm.pwm_phase_long = nla_get_u8(tb_pwm[IFLA_CAN_PWM_LONG]) & 0x3F;
+
+		if (tb_pwm[IFLA_CAN_PWM_SHORT])
+			priv->pwm.pwm_phase_short = nla_get_u8(tb_pwm[IFLA_CAN_PWM_SHORT]) & 0x3F;
+	}
+
 	if (data[IFLA_CAN_TERMINATION]) {
 		const u16 termval = nla_get_u16(data[IFLA_CAN_TERMINATION]);
 		const unsigned int num_term = priv->termination_const_cnt;
 		unsigned int i;
 
@@ -573,10 +599,11 @@ static size_t can_get_size(const struct net_device *dev)
 		size += nla_total_size(sizeof(*priv->xl.data_bitrate_const) *
 				       priv->xl.data_bitrate_const_cnt);
 	size += can_tdc_get_size(&priv->xl,			/* IFLA_CAN_XL_TDC */
 				 can_xl_tdc_is_enabled(priv),
 				 priv->ctrlmode & CAN_CTRLMODE_XL_TDC_MANUAL);
+	size += nla_total_size(sizeof(struct can_pwm));
 
 	return size;
 }
 
 static int can_tdc_fill_info(struct sk_buff *skb,  const struct net_device *dev,
@@ -734,11 +761,13 @@ static int can_fill_info(struct sk_buff *skb, const struct net_device *dev)
 		     priv->xl.data_bitrate_const_cnt,
 		     priv->xl.data_bitrate_const)) ||
 
 	    can_tdc_fill_info(skb, dev, &priv->xl, can_xl_tdc_is_enabled(priv),
 			      priv->ctrlmode & CAN_CTRLMODE_XL_TDC_MANUAL,
-			      IFLA_CAN_XL_TDC)
+			      IFLA_CAN_XL_TDC) ||
+
+	    nla_put(skb, IFLA_CAN_XL_PWM, sizeof(priv->pwm), &priv->pwm)
 	    )
 
 		return -EMSGSIZE;
 
 	return 0;
diff --git a/include/linux/can/bittiming.h b/include/linux/can/bittiming.h
index 2053b9dff0ad..47e266ab7486 100644
--- a/include/linux/can/bittiming.h
+++ b/include/linux/can/bittiming.h
@@ -114,10 +114,35 @@ struct can_tdc_const {
 	u32 tdco_max;
 	u32 tdcf_min;
 	u32 tdcf_max;
 };
 
+/*
+ * struct can_pwm - PWM configuration for switchable CAN XL transceivers
+ *
+ * -+-- init-offset -+------- one bit in CAN XL data mode --------+- TX pin
+ *  |<--- Offset --->|
+ *                   |<-------- Long 1 -------->|<--- Short 0 --->|  level_1
+ *                   |<--- Short 1 --->|<-------- Long 0 -------->|  level_0
+ *                                          |
+ *                                 (50/50 sample point)
+ *
+ * The duration of a complete PWM bit representation has to be < 200ns to
+ * reliably switch the CAN XL transceiver into the CAN XL data mode.
+ *
+ * @pwm_offset: Offset before first PWM bit trasmmission to fill the ADH bit
+ *
+ * @pwm_phase_long: PWM Phase Long (ideally 75% of PWM bit representation)
+ *
+ * @pwm_phase_short: PWM Phase Short (ideally 25% of PWM bit representation)
+ */
+struct can_pwm {
+	u8 pwm_offset;
+	u8 pwm_phase_long;
+	u8 pwm_phase_short;
+};
+
 #ifdef CONFIG_CAN_CALC_BITTIMING
 int can_calc_bittiming(const struct net_device *dev, struct can_bittiming *bt,
 		       const struct can_bittiming_const *btc, struct netlink_ext_ack *extack);
 
 void can_calc_tdco(struct can_tdc *tdc, const struct can_tdc_const *tdc_const,
diff --git a/include/linux/can/dev.h b/include/linux/can/dev.h
index 1ac98914f351..6b65b3fccfd2 100644
--- a/include/linux/can/dev.h
+++ b/include/linux/can/dev.h
@@ -60,10 +60,11 @@ struct can_priv {
 	struct can_bittiming bittiming;
 	struct data_bittiming_params fd, xl;
 	unsigned int bitrate_const_cnt;
 	const u32 *bitrate_const;
 	u32 bitrate_max;
+	struct can_pwm pwm;
 	struct can_clock clock;
 
 	unsigned int termination_const_cnt;
 	const u16 *termination_const;
 	u16 termination;
diff --git a/include/uapi/linux/can/netlink.h b/include/uapi/linux/can/netlink.h
index 163a6167264e..bd3706b37e04 100644
--- a/include/uapi/linux/can/netlink.h
+++ b/include/uapi/linux/can/netlink.h
@@ -146,16 +146,31 @@ enum {
 	IFLA_CAN_CTRLMODE_EXT,
 	IFLA_CAN_XL_DATA_BITTIMING,
 	IFLA_CAN_XL_DATA_BITTIMING_CONST,
 	IFLA_CAN_XL_DATA_BITRATE_CONST,
 	IFLA_CAN_XL_TDC,
+	IFLA_CAN_XL_PWM,
 
 	/* add new constants above here */
 	__IFLA_CAN_MAX,
 	IFLA_CAN_MAX = __IFLA_CAN_MAX - 1
 };
 
+/*
+ * CAN XL Transceiver data mode switching PWM configuration
+ */
+enum {
+	IFLA_CAN_PWM_UNSPEC,
+	IFLA_CAN_PWM_OFFSET,	/* u8 */
+	IFLA_CAN_PWM_LONG,	/* u8 */
+	IFLA_CAN_PWM_SHORT,	/* u8 */
+
+	/* add new constants above here */
+	__IFLA_CAN_PWM,
+	IFLA_CAN_PWM_MAX = __IFLA_CAN_PWM - 1
+};
+
 /*
  * CAN FD/XL Transmitter Delay Compensation (TDC)
  *
  * Please refer to struct can_tdc_const and can_tdc in
  * include/linux/can/bittiming.h for further details.
-- 
2.47.2

